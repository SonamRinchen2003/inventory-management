<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Department Inventory Management System</title>
    <style>
        /* Basic styling for the dashboard */
        body {
            font-family: Arial, sans-serif;
            background-color: #000;
            color: #fff;
            margin: 0;
            padding: 0;
        }
        header {
            background-color: #333;
            color: #fff;
            padding: 1em;
            text-align: center;
        }
        nav a {
            color: #fff;
            margin: 0 1em;
            text-decoration: none;
        }
        .container {
            padding: 2em;
        }
        .hidden {
            display: none;
        }
        .section {
            margin-bottom: 2em;
        }
        button {
            background-color: #555;
            border: none;
            color: #fff;
            padding: 0.5em 1em;
            margin: 0.5em;
            cursor: pointer;
        }
        button:hover {
            background-color: #666;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1em;
        }
        table, th, td {
            border: 1px solid #fff;
        }
        th, td {
            padding: 0.5em;
            text-align: left;
        }
        th {
            background-color: #444;
        }
    </style>
</head>
<body>
    <header>
        <h1>Department Inventory Management System</h1>
        <nav>
            <a href="#login" id="loginLink">Login</a>
            <a href="#register" id="registerLink">Register</a>
            <a href="#dashboard" class="hidden" id="dashboardLink">Dashboard</a>
        </nav>
    </header>

    <section id="login" class="container">
        <h2>Login</h2>
        <form id="loginForm">
            <div class="form-group">
                <label for="departmentID">Department ID:</label>
                <input type="text" id="departmentID" name="departmentID" required>
            </div>
            <div class="form-group">
                <label for="userID">User ID:</label>
                <input type="text" id="userID" name="userID" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <div id="loginError" class="hidden">Invalid Department ID or User ID</div>
    </section>

    <section id="register" class="container hidden">
        <h2>Register</h2>
        <form id="registerForm">
            <div class="form-group">
                <label for="newDepartmentID">Department ID:</label>
                <input type="text" id="newDepartmentID" name="newDepartmentID" required>
            </div>
            <div class="form-group">
                <label for="newUserID">User ID:</label>
                <input type="text" id="newUserID" name="newUserID" required>
            </div>
            <div class="form-group">
                <label for="newPassword">Password:</label>
                <input type="password" id="newPassword" name="newPassword" required>
            </div>
            <button type="submit">Register</button>
        </form>
        <div id="registerError" class="hidden">Registration failed. Please try again.</div>
    </section>

    <section id="dashboard" class="container hidden">
        <h2>Dashboard</h2>
        <button id="logoutButton">Logout</button>
        
        <div id="adminSection" class="hidden section">
            <h3>Admin Dashboard</h3>
            <button id="manageInventoryButton">Manage Inventory</button>
            <button id="generateReportButton">Generate Report</button>
            <button id="viewOrdersButton">View Orders</button>
        </div>

        <div id="userSection" class="hidden section">
            <h3>User Dashboard</h3>
            <button id="viewInventoryButton">View Inventory</button>
            <button id="placeOrderButton">Place Order</button>
        </div>

        <div id="manageInventorySection" class="hidden section">
            <h3>Manage Inventory</h3>
            <button id="addItemButton">Add Item</button>
            <button id="deleteItemButton">Delete Item</button>
            <button id="viewExistingInventoryButton">View Existing Inventory</button>
        </div>

        <div id="addItemSection" class="hidden section">
            <h3>Add Item</h3>
            <form id="addItemForm">
                <div class="form-group">
                    <label for="itemName">Item Name:</label>
                    <input type="text" id="itemName" name="itemName" required>
                </div>
                <div class="form-group">
                    <label for="itemQuantity">Quantity:</label>
                    <input type="number" id="itemQuantity" name="itemQuantity" required>
                </div>
                <button type="submit">Add Item</button>
            </form>
        </div>

        <div id="deleteItemSection" class="hidden section">
            <h3>Delete Item</h3>
            <form id="deleteItemForm">
                <div class="form-group">
                    <label for="itemID">Item ID:</label>
                    <input type="text" id="itemID" name="itemID" required>
                </div>
                <button type="submit">Delete Item</button>
            </form>
        </div>

        <div id="viewExistingInventorySection" class="hidden section">
            <h3>Existing Inventory</h3>
            <table>
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody id="inventoryList"></tbody>
            </table>
        </div>

        <div id="placeOrderSection" class="hidden section">
            <h3>Place Order</h3>
            <form id="placeOrderForm">
                <div class="form-group">
                    <label for="orderItemName">Item Name:</label>
                    <input type="text" id="orderItemName" name="orderItemName" required>
                </div>
                <div class="form-group">
                    <label for="orderQuantity">Quantity:</label>
                    <input type="number" id="orderQuantity" name="orderQuantity" required>
                </div>
                <button type="submit">Place Order</button>
            </form>
        </div>

        <div id="generateReportSection" class="hidden section">
            <h3>Generate Report</h3>
            <form id="generateReportForm">
                <div class="form-group">
                    <label for="reportType">Report Type:</label>
                    <select id="reportType" name="reportType">
                        <option value="monthly">Monthly Usage</option>
                        <option value="yearly">Yearly Usage</option>
                    </select>
                </div>
                <button type="submit">Generate Report</button>
            </form>
            <div id="reportOutput" class="hidden"></div>
        </div>

        <div id="viewOrdersSection" class="hidden section">
            <h3>View Orders</h3>
            <table>
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Item Name</th>
                        <th>Quantity</th>
                        <th>Department</th>
                    </tr>
                </thead>
                <tbody id="ordersList"></tbody>
            </table>
        </div>

        <div id="message" class="hidden section"></div>
    </section>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const loginForm = document.getElementById('loginForm');
            const loginError = document.getElementById('loginError');
            const registerForm = document.getElementById('registerForm');
            const registerError = document.getElementById('registerError');
            const dashboard = document.getElementById('dashboard');
            const departmentIDInput = document.getElementById('departmentID');
            const userIDInput = document.getElementById('userID');
            const newDepartmentIDInput = document.getElementById('newDepartmentID');
            const newUserIDInput = document.getElementById('newUserID');
            const newPasswordInput = document.getElementById('newPassword');
            const adminSection = document.getElementById('adminSection');
            const userSection = document.getElementById('userSection');
            const manageInventorySection = document.getElementById('manageInventorySection');
            const addItemSection = document.getElementById('addItemSection');
            const deleteItemSection = document.getElementById('deleteItemSection');
            const viewExistingInventorySection = document.getElementById('viewExistingInventorySection');
            const placeOrderSection = document.getElementById('placeOrderSection');
            const generateReportSection = document.getElementById('generateReportSection');
            const viewOrdersSection = document.getElementById('viewOrdersSection');
            const addItemForm = document.getElementById('addItemForm');
            const deleteItemForm = document.getElementById('deleteItemForm');
            const placeOrderForm = document.getElementById('placeOrderForm');
            const generateReportForm = document.getElementById('generateReportForm');
            const logoutButton = document.getElementById('logoutButton');
            const inventoryList = document.getElementById('inventoryList');
            const ordersList = document.getElementById('ordersList');
            const reportOutput = document.getElementById('reportOutput');
            const messageDiv = document.getElementById('message');

            const validDepartmentIDs = ['Computer', 'Mechanical', 'Electrical'];
            const validUserIDs = {
                'admin': 'admin',
                'user1': 'user',
                'admin': 'admin',
                'user': 'user',
                'admin': 'admin',
                'user': 'user'
            };
            const departments = {
                'CS': [],
                'Mechanical': [],
                'Electrical': []
            };
            const orders = [];

            let currentRole = '';
            let currentDepartment = '';

            loginForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const departmentID = departmentIDInput.value;
                const userID = userIDInput.value;

                if (validDepartmentIDs.includes(departmentID) && validUserIDs[userID]) {
                    currentDepartment = departmentID;
                    currentRole = validUserIDs[userID];
                    loginError.classList.add('hidden');
                    document.getElementById('login').classList.add('hidden');
                    document.getElementById('register').classList.add('hidden');
                    dashboard.classList.remove('hidden');
                    document.getElementById('loginLink').classList.add('hidden');
                    document.getElementById('registerLink').classList.add('hidden');
                    document.getElementById('dashboardLink').classList.remove('hidden');

                    if (currentRole === 'admin') {
                        adminSection.classList.remove('hidden');
                        userSection.classList.add('hidden');
                    } else {
                        userSection.classList.remove('hidden');
                        adminSection.classList.add('hidden');
                    }
                } else {
                    loginError.classList.remove('hidden');
                }
            });

            registerForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const departmentID = newDepartmentIDInput.value;
                const userID = newUserIDInput.value;
                const password = newPasswordInput.value;

                if (validDepartmentIDs.includes(departmentID) && !validUserIDs[userID] && password) {
                    validUserIDs[userID] = 'user';
                    users[userID] = { departmentID, password };
                    registerError.classList.add('hidden');
                    newDepartmentIDInput.value = '';
                    newUserIDInput.value = '';
                    newPasswordInput.value = '';
                    document.getElementById('register').classList.add('hidden');
                    document.getElementById('login').classList.remove('hidden');
                } else {
                    registerError.classList.remove('hidden');
                }
            });

            document.getElementById('manageInventoryButton').addEventListener('click', () => {
                manageInventorySection.classList.remove('hidden');
                addItemSection.classList.add('hidden');
                deleteItemSection.classList.add('hidden');
                viewExistingInventorySection.classList.add('hidden');
                generateReportSection.classList.add('hidden');
                viewOrdersSection.classList.add('hidden');
            });

            document.getElementById('addItemButton').addEventListener('click', () => {
                addItemSection.classList.remove('hidden');
                deleteItemSection.classList.add('hidden');
                viewExistingInventorySection.classList.add('hidden');
                generateReportSection.classList.add('hidden');
                viewOrdersSection.classList.add('hidden');
            });

            document.getElementById('deleteItemButton').addEventListener('click', () => {
                deleteItemSection.classList.remove('hidden');
                addItemSection.classList.add('hidden');
                viewExistingInventorySection.classList.add('hidden');
                generateReportSection.classList.add('hidden');
                viewOrdersSection.classList.add('hidden');
            });

            document.getElementById('viewExistingInventoryButton').addEventListener('click', () => {
                viewExistingInventorySection.classList.remove('hidden');
                addItemSection.classList.add('hidden');
                deleteItemSection.classList.add('hidden');
                generateReportSection.classList.add('hidden');
                viewOrdersSection.classList.add('hidden');
                loadInventory();
            });

            document.getElementById('placeOrderButton').addEventListener('click', () => {
                placeOrderSection.classList.remove('hidden');
                generateReportSection.classList.add('hidden');
                viewOrdersSection.classList.add('hidden');
            });

            document.getElementById('generateReportButton').addEventListener('click', () => {
                generateReportSection.classList.remove('hidden');
                viewOrdersSection.classList.add('hidden');
            });

            document.getElementById('viewOrdersButton').addEventListener('click', () => {
                viewOrdersSection.classList.remove('hidden');
                generateReportSection.classList.add('hidden');
                manageInventorySection.classList.add('hidden');
                loadOrders();
            });

            addItemForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const itemName = document.getElementById('itemName').value;
                const itemQuantity = document.getElementById('itemQuantity').value;
                departments[currentDepartment].push({ item_name: itemName, quantity: itemQuantity });
                messageDiv.textContent = Added ${itemName} with quantity ${itemQuantity};
                addItemForm.reset();
                loadInventory();
            });

            deleteItemForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const itemID = document.getElementById('itemID').value;
                departments[currentDepartment] = departments[currentDepartment].filter((item, index) => index != itemID);
                messageDiv.textContent = Deleted item with ID ${itemID};
                deleteItemForm.reset();
                loadInventory();
            });

            placeOrderForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const orderItemName = document.getElementById('orderItemName').value;
                const orderQuantity = document.getElementById('orderQuantity').value;
                const item = departments[currentDepartment].find(item => item.item_name === orderItemName);
                if (item) {
                    if (item.quantity >= orderQuantity) {
                        item.quantity -= orderQuantity;
                        const orderID = orders.length + 1;
                        orders.push({ orderID, item_name: orderItemName, quantity: orderQuantity, department: currentDepartment });
                        messageDiv.textContent = Order placed for ${orderQuantity} ${orderItemName};
                    } else {
                        messageDiv.textContent = Not enough quantity available for ${orderItemName};
                    }
                } else {
                    messageDiv.textContent = Item ${orderItemName} not found;
                }
                placeOrderForm.reset();
                loadInventory();
            });

            generateReportForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const reportType = document.getElementById('reportType').value;
                reportOutput.textContent = Generating ${reportType} report...;
                reportOutput.classList.remove('hidden');
            });

            logoutButton.addEventListener('click', () => {
                document.getElementById('login').classList.remove('hidden');
                document.getElementById('register').classList.add('hidden');
                dashboard.classList.add('hidden');
                userSection.classList.add('hidden');
                adminSection.classList.add('hidden');
                currentRole = '';
                currentDepartment = '';
                document.getElementById('loginLink').classList.remove('hidden');
                document.getElementById('registerLink').classList.remove('hidden');
                document.getElementById('dashboardLink').classList.add('hidden');
            });

            function loadInventory() {
                inventoryList.innerHTML = '';
                const inventory = departments[currentDepartment] || [];
                inventory.forEach((item, index) => {
                    const row = document.createElement('tr');
                    row.innerHTML = <td>${item.item_name}</td><td>${item.quantity}</td>;
                    inventoryList.appendChild(row);
                });
            }

            function loadOrders() {
                ordersList.innerHTML = '';
                orders.forEach(order => {
                    const row = document.createElement('tr');
                    row.innerHTML = <td>${order.orderID}</td><td>${order.item_name}</td><td>${order.quantity}</td><td>${order.department}</td>;
                    ordersList.appendChild(row);
                });
            }
        });
    </script>
</body>
</html>